[package]
name = "music-player"
version = "0.2.0-alpha.8"
edition = "2021"
repository = "https://github.com/tsirysndr/music-player"
license = "MIT"
readme = "README.md"
authors = ["Tsiry Sandratraina <tsiry.sndr@aol.com>"]
categories = ["command-line-utilities"]
keywords = ["tokio", "music", "daemon", "streaming", "player"]
description = "An extensible music player daemon written in Rust"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace.metadata.raze]
# The path at which to write output files.
#
# `cargo raze` will generate Bazel-compatible BUILD files into this path.
# This can either be a relative path (e.g. "foo/bar"), relative to this
# Cargo.toml file; or relative to the Bazel workspace root (e.g. "//foo/bar").
workspace_path = "//cargo"
default_gen_buildrs = true
experimental_api = true
render_package_aliases = false

# This causes aliases for dependencies to be rendered in the BUILD
# file located next to this `Cargo.toml` file.
package_aliases_dir = "."

# The set of targets to generate BUILD rules for.
targets = [
    "x86_64-apple-darwin",
]

# The two acceptable options are "Remote" and "Vendored" which
# is used to indicate whether the user is using a non-vendored or
# vendored set of dependencies.
genmode = "Vendored"

[package.metadata.raze.crates.ring.'*']
compile_data_attr = "glob([\"*/**\"])"

[package.metadata.raze.crates.webpki.'*']
compile_data_attr = "glob([\"*/**\"])"

[package.metadata.raze.crates.clap_derive.'*']
compile_data_attr = "glob([\"*/**\"])"

[package.metadata.raze.crates.protobuf-codegen-pure.'*']
compile_data_attr = "glob([\"*/**\"])"

[package.metadata.raze.crates.json5.'*']
compile_data_attr = "glob([\"*/**\"])"

[package.metadata.raze.crates.value-bag.'*']
compile_data_attr = "glob([\"*/**\"])"

[package.metadata.raze.crates.hmac.'*']
compile_data_attr = "glob([\"*/**\"])"

[package.metadata.raze.crates.lofty.'*']
compile_data_attr = "glob([\"*/**\"])"

[package.metadata.raze.crates.digest.'*']
additional_flags = [
  '--cfg=feature=\"mac\"',
]

[package.metadata.raze.crates.sea-orm.'*']
additional_flags = [
  '--cfg=feature=\"runtime-tokio-rustls\"',
  '--cfg=feature=\"sqlx-sqlite\"',
]

[package.metadata.raze.crates.sea-orm-migration.'*']
additional_flags = [
  '--cfg=feature=\"runtime-tokio-rustls\"',
  '--cfg=feature=\"sqlx-sqlite\"',
]

[package.metadata.raze.crates.tokio.'*']
additional_flags = [
  '--cfg=feature=\"full\"',
]

[workspace]

members = [
    "addons",
    "client",
    "discovery",
    "entity",
    "graphql",
    "migration",
    "playback",
    "scanner",
    "server",
    "settings",
    "storage",
    "tracklist",
    "types",
    "webui",
    "webui/musicplayer/src-tauri"
]

exclude = [
  "addons/airplay",
  "addons/chromecast",
  "addons/datpiff",
  "addons/deezer",
  "addons/genius",
  "addons/lastfm",
  "addons/local",
  "addons/musicbrainz",
  "addons/myvazo",
  "addons/soundcloud",
  "addons/spotify",
  "addons/youtube",
  "addons/tidal",
]

[[bin]]
name = "music-player"
path = "src/main.rs"

[dependencies.music-player-server]
path = "server"
version = "0.1.10"

[dependencies.music-player-playback]
path = "playback"
version = "0.1.7"

[dependencies.music-player-scanner]
path = "scanner"
version = "0.1.5"

[dependencies.music-player-entity]
path = "entity"
version = "0.1.5"

[dependencies.music-player-migration]
path = "migration"
version = "0.1.4"

[dependencies.music-player-settings]
path = "settings"
version = "0.1.1"

[dependencies.music-player-storage]
path = "storage"
version = "0.1.2"

[dependencies.music-player-addons]
path = "addons"
version = "0.1.0"

[dependencies.music-player-tracklist]
path = "tracklist"
version = "0.1.5"

[dependencies.music-player-client]
path = "client"
version = "0.1.1"

[dependencies.music-player-webui]
path = "webui"
version = "0.1.7"

[dependencies.music-player-discovery]
path = "discovery"
version = "0.1.1"

[dependencies.music-player-graphql]
path = "graphql"
version = "0.1.4"

[dependencies.music-player-types]
path = "types"
version = "0.1.1"

[dependencies.sea-orm-migration]
version = "^0.9.0"
features = [
  # Enable at least one `ASYNC_RUNTIME` and `DATABASE_DRIVER` feature if you want to run migration via CLI.
  # View the list of supported features at https://www.sea-ql.org/SeaORM/docs/install-and-config/database-and-async-runtime.
  # e.g.
  # "runtime-tokio-rustls",  # `ASYNC_RUNTIME` feature
  # "sqlx-postgres",         # `DATABASE_DRIVER` feature
  "runtime-tokio-rustls",
  "sqlx-sqlite",
]

[dependencies]
clap = "3.2.20"
tokio = { version = "1.21.0", features = ["full"] }
md5 = "0.7.0"
sea-orm = { version = "0.9.2", features = ["runtime-tokio-rustls", "sqlx-sqlite"] }
futures = "0.3.24"
lofty = "0.9.0"
owo-colors = "3.5.0"
tabled = "0.8.0"
crossterm = { version = "0.25.0", features = ["serde"] }
tui = { version = "0.19.0", features = ["crossterm", "serde"] }
tungstenite = "0.17.3"
futures-channel = "0.3.24"
serde_json = "1.0.85"
dirs = "4.0.0"
spinners = "4.1.0"
